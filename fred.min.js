console.log("(C) Josh Netterfield <joshua@nettek.ca> 2013");var BIG_NUMBER=999999999;var Fred={rules:function(){this.baseRules={comm:[{vars:"xy",input:"$x & $y",output:"$y & $x"},{vars:"xy",input:"$x v $y",output:"$y v $x"},{vars:"xy",input:"$x <==> $y",output:"$y <==> $x"}],lem:[{vars:"x",input:"$x v !$x",output:"true"}],contr:[{vars:"x",input:"$x & !$x",output:"false"}],impl:[{vars:"xy",input:"$x => $y",output:"!$x v $y"}],idemp:[{vars:"x",input:"$x v $x",output:"$x"},{vars:"x",input:"$x & $x",output:"$x"}],neg:[{vars:"x",input:"!!$x",output:"$x"}],simp1:[{vars:"x",input:"$x & true",output:"$x"},{vars:"x",input:"$x v true",output:"true"},{vars:"x",input:"$x & false",output:"false"},{vars:"x",input:"$x or false",output:"$x"}],assoc:[{vars:"xyz",input:"$x & ($y & $z)",output:"($x & $y) & $z"},{vars:"xyz",input:"$x v ($y v $z)",output:"($x v $y) v $z"},{vars:"xyz",input:"$x & ($y & $z)",output:"$x & $y & $z"},{vars:"xyz",input:"($x & $y) & $z",output:"$x & $y & $z"}],dm:[{vars:"xy",input:"!($x & $y)",output:"!$x & !$y"},{vars:"xy",input:"!($x v $y)",output:"!$x & !$y"}],distr:[{vars:"xyz",input:"$x v ($y & $z)",output:"($x v $y) & ($x & $z)"},{vars:"xyz",input:"$x & ($y v $z)",output:"($x & $y) v ($x & $z)"},{vars:"xyz",input:"$x & ($y v $z)",output:"$x & $y v $x & $z"}],contrapos:[{vars:"xy",input:"$x => $y",output:"!$y => !$x"}],equiv:[{vars:"xy",input:"$x <==> $y",output:"($x => $y) & ($y => $x)"}],simp2:[{vars:"xy",input:"$x v ($x & $y)",output:"$x"},{vars:"xy",input:"$x v $x & $y",output:"$x"},{vars:"xy",input:"$x & ($x v $y)",output:"$x"}],brackets:[{vars:"x",input:"($x)",output:"$x"},{vars:"xy",input:"($x & $y)",output:"$x & $y"},{vars:"xy",input:"($x v $y)",output:"$x v $y"},{vars:"xy",input:"($x => $y)",output:"$x => $y"},{vars:"xy",input:"($x <==> $y)",output:"$x <==> $y"}],cow:[{vars:"",input:"grass",output:"methane & milk"}]};var rules=_({}).extend(this.baseRules);_(rules).each(function(ruleGroup,key){rules[key]=ruleGroup.concat(_(ruleGroup).foldl(function(memo,rule){if(rule.vars.length>1){memo.push({vars:rule.vars.split("").reverse().join(""),input:rule.input,output:rule.output})}if(rule.vars.length===2){if(rule.vars!=="xyz"){return memo}memo.push({vars:"yxz",input:rule.input,output:rule.output});memo.push({vars:"xzy",input:rule.input,output:rule.output})}return memo},[]))});_(rules).each(function(ruleGroup,key){rules[key]=ruleGroup.concat(_(ruleGroup).foldl(function(memo,rule){if(rule.vars.length>1){memo.push({vars:rule.vars,input:rule.input.replace(/\$x/g,"$w").replace(/\$y/g,"$x").replace(/\$w/g,"$y"),output:rule.output.replace(/\$x/g,"$w").replace(/\$y/g,"$x").replace(/\$w/g,"$y")})}return memo},[]))});_(rules).each(function(ruleGroup,key){if(key==="brackets")return;if(key==="comm")return;rules[key]=ruleGroup.concat(_(ruleGroup).foldl(function(memo,rule){if(rule.vars.length==3){memo.push({vars:rule.vars,input:rule.input.replace(/\$x/g,"$w").replace(/\$z/g,"$x").replace(/\$w/g,"$z"),output:rule.output.replace(/\$x/g,"$w").replace(/\$z/g,"$x").replace(/\$w/g,"$z")});memo.push({vars:rule.vars,input:rule.input.replace(/\$y/g,"$w").replace(/\$z/g,"$y").replace(/\$w/g,"$y"),output:rule.output.replace(/\$y/g,"$w").replace(/\$z/g,"$y").replace(/\$w/g,"$y")})}return memo},[]))});_(rules).each(function(ruleGroup,key){rules[key]=ruleGroup.concat(_(ruleGroup).map(function(rule){return{vars:rule.vars,input:rule.output,output:rule.input}}))});return rules}(),getTruePrimatives:function(grg){return _.chain(grg.split(" ")).foldl(function(memo,item){for(var i=0;i<item.length;++i){if(item[i].match(/[a-z]/i)&&item[i]!="v"){memo.push(item[i])}}return memo},[]).uniq().value()},getAllPotentialVariables:function(grg,nest){var ret=[],self=this;if(!nest){window.map={};window.nextId=1e3}grg=grg.replace("=>","*");grg=grg.replace("<==>","@");function untrap(g){while(g.indexOf("[")>-1){_(map).each(function(value,key){g=g.replace(key,value)})}return g}function getPrimatives(grg){return _.chain(grg.split(" ")).foldl(function(memo,item){for(var i=0;i<item.length;++i){if(item[i].match(/[a-z]/i)&&item[i]!="v"){memo.push(item[i]);memo.push("!"+item[i])}}return memo},[]).uniq().value()}ret=getPrimatives(grg);function primatize(ngrg,preserveBrackets){var next=ngrg.search(/\([^\(]*?\)/);if(next===-1)return false;var close=ngrg.indexOf(")");if(close===-1){this.output("Unclosed bracket!");return false}var rep=ngrg.substring(next,close+1),srep=ngrg.substring(next+1,close);repName="["+nextId++ +"]";map[repName]=preserveBrackets?rep:srep;ngrg=ngrg.replace(rep,repName);if(preserveBrackets){ret=ret.concat(self.getAllPotentialVariables(srep,true))}ret.push(srep);ret.push(untrap(srep));return ngrg}function quote(ngrg,operator,nextPtr){var next=ngrg.indexOf(operator,nextPtr[0]);nextPtr[0]=next;if(next===-1){return false}++nextPtr[0];var start=next-1,end=next+1;for(;start>=0;--start){var s=ngrg[start];if(s==="&"||s==="v"||s=="@"||s=="*"||s===">"||s==="="||s==="<"){start+=2;break}}for(;end<=ngrg.length;++end){var s=ngrg[end];if(s==="&"||s==="v"||s=="@"||s=="*"||s===">"||s==="="||s==="<"){--end;break}}return ngrg.substring(0,start)+"("+ngrg.substring(start,end)+")"+ngrg.substring(end,ngrg.length)}for(var ngrg=grg;ngrg=primatize(ngrg,true);ngrg){grg=ngrg}var nextIteration="";["&","v","*","@"].forEach(function(op){var start=[0];while(start[0]!=BIG_NUMBER){var minStart=BIG_NUMBER;for(var ngrg=grg;ngrg=quote(ngrg,op,start);ngrg){if(start[0]>-1)minStart=Math.min(start[0],minStart);ngrg=primatize(ngrg,false);if(ngrg.indexOf(op)===-1&&ngrg.length>nextIteration.length){nextIteration=ngrg}}start[0]=minStart}if(nextIteration.length){grg=nextIteration}nextIteration=""});while(_(ret).any(function(t){return t.indexOf("[")>-1})){_(map).each(function(value,key){ret=_(ret).map(function(r){return r.replace(key,value)})})}_(map).each(function(value,key){ret.push(untrap(key))});ret=_(ret).map(function(r){return r.replace("*","=>").replace("@","<==>")});_(ret).each(function(t){if(t.indexOf("(")===0){ret.push("!"+t)}});ret=_(ret).uniq();ret=ret.sort(function(a,b){return a.length>b.length?-1:1});return ret},output:function(inp){document.getElementById("output").appendChild(document.createElement("pre")).innerHTML=inp},clear:function(){document.getElementById("output").innerHTML=""},printTransformations:function(){Fred.output("Fred knows the following transformations:<br/>"+Fred.syntaxHighlight(JSON.stringify(Fred.baseRules,undefined,4)))},printHelp:function(){Fred.clear();Fred.output("A line should have a 'by &lt;name&gt;' suffix<br>if Fred should verify a transformation.");Fred.output("A line should end with 'by ???' if you<br>would prefer Fred to name a transformation.");Fred.output("If you want to see what a certain step<br>would do to the previous line, the syntax<br/>is 'try &lt;name&gt;'");Fred.output("Also, Fred can print a truth table.<br/>The syntax is 'print &lt;statement&gt;'");Fred.output("Fred is really picky about spacing.<br>It's best to run it through George first.");Fred.output("Everything after '%' or '#' is a comment.");Fred.printTransformations()},evaluate:function(){var html=document.getElementById("exe").value,self=this;Fred.clear();var prevStat="";_(html.split("\n")).each(function(line){if(line.indexOf("%")>-1){line=line.substring(0,line.indexOf("%"))}if(line.indexOf("#")>-1){line=line.substring(0,line.indexOf("#"))}if(line.indexOf(") ")===1||line.indexOf(") ")===2){line=line.substring(line.indexOf(") ")+1,line.length)}while(line.indexOf("! ")>-1)line=line.replace("! ","!");line=line.trim();if(!line.length){return}if(line.indexOf("print")===0){line+=" ";Fred.output("<B>"+line+"</B><br/>"+Fred.getTruthTable(line.split("print")[1]));return}if(line.indexOf("try")===0){line=line.replace("try","").trim();Fred.output("<B>"+line+"</B><br/>Results: "+Fred.syntaxHighlight(JSON.stringify(self.doRule(line,{mode:"all",grg:prevStat}).sort(function(a,b){return a.length-b.length}),undefined,4)));return}var parts=line.split("by");var stat=parts[0].trim();if(parts.length>1){var op=parts[1];op=op.trim();if(op.indexOf("?")===-1){if(!(op in self.rules)){Fred.output("<B>"+line+"</B><br/>"+op+" is not a known operation. Click 'WTF'.")}var result=self.doRule(op,{mode:"match",grg:prevStat,required:stat});if(result){Fred.output("<B>"+line+"</B><br/>Looks good to me.")}else{Fred.output("<B>"+line+"</B><br/><span class='fail'>Not a known transformation!</span><br/>You may have meant one of: "+Fred.syntaxHighlight(JSON.stringify(self.doRule(op,{mode:"all",grg:prevStat}).sort(function(a,b){return a.length-b.length}),undefined,4)))}}else{var ok=false;_(Fred.baseRules).each(function(value,key){if(ok)return;var result=self.doRule(key,{mode:"match",grg:prevStat,required:stat});if(result){Fred.output("<B>"+line+"</B><br/>That looks like <B>"+key+"</B> to me.");ok=true}});if(!ok){Fred.output("<B>"+line+"</B><br/>I don't know anything that does that.")}}}prevStat=stat})},notFound:function(ruleName){this.output("'"+ruleName+"' is not a valid transformation.");this.printTransformations()},precedence:{"!":0,"&":1,v:2,"*":3,"@":4,"=":5,">":5,"(":6,")":6},substitutionIsValid:function(grg,start,end){var firstOp,finalOp,precedence=this.precedence;for(var i=end;i>start;--i){if(grg[i]in precedence){finalOp=grg[i];break}}for(var i=start;i<end;++i){if(grg[i]in precedence){firstOp=grg[i];break}}if(!!firstOp!=!!finalOp){}if(!firstOp){return true}for(var i=end;i<grg.length;++i){if(grg[i]in precedence){if(this.precedence[grg[i]]<precedence[finalOp])return false;break}}for(var i=start;i>0;--i){if(grg[i]in precedence){if(this.precedence[grg[i]]===6&&[grg[i-1]]==="!")return false;if(this.precedence[grg[i]]<precedence[firstOp])return false;break}}return true},doRule:function(ruleName,options){ruleGroup=this.rules[ruleName];if(!ruleGroup){this.notFound(ruleName);return}var potentials=null,grg=options.grg,inputs=[grg],mappings=[[]],failFlag=false,self=this;function doSub(input,sub,l,newInputs,newMappings,currentMapping){if(input.indexOf(sub)>-1){var search=0;while(input.indexOf(sub,search)>-1){search=input.indexOf(sub)+sub.length;input=input.replace(sub,"$"+l)}newInputs.push(input);newMappings.push(currentMapping.concat([sub]));return true}else return false}_(ruleGroup[0].vars).each(function(l){if(failFlag)return;var newInputs=[],newMappings=[];_(inputs).each(function(input,i){if(failFlag)return;if(options[l]){doSub(input,options[l],l,newInputs,newMappings,mappings[i])}else{if(!potentials){potentials=self.getAllPotentialVariables(options.grg)}_(potentials).each(function(potential){doSub(input,potential,l,newInputs,newMappings,mappings[i])})}});inputs=newInputs;mappings=newMappings;return l});if(!inputs.length){return false}var validOutputs=[];_(inputs).each(function(input,i){_(ruleGroup).each(function(rule){if(input.indexOf(rule.input)>-1){if(!Fred.substitutionIsValid(input,input.indexOf(rule.input),input.indexOf(rule.input)+rule.input.length)){return}var newOutput=input.replace(rule.input,rule.output);var currentMapping=mappings[i];_(currentMapping).each(function(map,j){var prev="";while(prev!==newOutput){prev=newOutput;newOutput=newOutput.replace("$"+ruleGroup[0].vars[j],map)}});validOutputs.push(newOutput)}})});validOutputs=_(validOutputs).uniq();for(var i=0;i<1;++i){if(ruleName!=="brackets"&&options.mode==="match"){validOutputs=_(validOutputs).foldl(function(memo,out){var simplified=Fred.doRule("brackets",{mode:"all",grg:out});return memo.concat(simplified)},validOutputs)}}if(options.mode==="first"){return validOutputs[0]}else if(options.mode==="match"){return _(validOutputs).any(function(t){return t===options.required})}else if(options.mode==="all"){return _(validOutputs).uniq()}return"Invalid mode."},toExpr:function(grg,options){if(grg.indexOf("<==>")>-1){console.warn("<==> won't be verified.");return"'Moo'"}else while(grg.indexOf("=>")>-1){grg=this.doRule("impl",_({grg:grg,mode:"first"}).extend(options))}grg=grg.replace(/v/g,"||");grg=grg.replace(/&/g,"&&");return grg},getTruthTable:function(grg){var evil=window.eval,expr=this.toExpr(grg),vars=this.getTruePrimatives(grg),states=[""],human=[""];var max=1;_(vars).each(function(v){var i=0;var r=_(states).foldl(function(memo,val){_(_.zip(states,human)).each(function(s){if(++i>max)return;memo[0].push(s[0]+"var "+v+"=0;");memo[1].push(s[1]+"F ");memo[0].push(s[0]+"var "+v+"=1;");memo[1].push(s[1]+"T ")});return memo},[[],[]]);max*=2;states=r[0];human=r[1]});var ret="";_(vars).each(function(v){ret+=v+" "});ret+="| Result\n";_(_.zip(states,human)).each(function(s){ret+=s[1]+"  "+(evil(s[0]+expr)?"True":"False")+"\n"});return ret},syntaxHighlight:function(json){if(!json)return;json=json.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(match){var cls="number";if(/^"/.test(match)){if(/:$/.test(match)){cls="key"}else{cls="string"}}else if(/true|false/.test(match)){cls="boolean"}else if(/null/.test(match)){cls="null"}return'<span class="'+cls+'">'+match+"</span>"})}};Fred.baseRules=baseRules;delete baseRules;